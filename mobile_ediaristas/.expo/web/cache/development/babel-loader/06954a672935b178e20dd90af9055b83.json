{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useMemo } from \"react\";\nimport { ValidationService } from \"../../services/ValidationService\";\nimport { ApiService } from \"../../services/ApiServices\";\nexport default function useIndex() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      CEP = _useState2[0],\n      setCEP = _useState2[1],\n      cepValido = useMemo(function () {\n    return ValidationService.cep(CEP);\n  }, [CEP]),\n      _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      erro = _useState4[0],\n      setErro = _useState4[1],\n      _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buscaFeita = _useState6[0],\n      setBuscaFeita = _useState6[1],\n      _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      carregando = _useState8[0],\n      setCarregando = _useState8[1],\n      _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      diaristas = _useState10[0],\n      setDiaristas = _useState10[1],\n      _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      diaristasRestantes = _useState12[0],\n      setDiaristasRestantes = _useState12[1];\n\n  function buscarProfissionais(cep) {\n    var _await$ApiService$get, data;\n\n    return _regeneratorRuntime.async(function buscarProfissionais$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setBuscaFeita(false);\n            setCarregando(true);\n            setErro(\"\");\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(ApiService.get(\"/api/diaristas-cidade?cep=\" + CEP.replace(/\\D/g, \"\")));\n\n          case 6:\n            _await$ApiService$get = _context.sent;\n            data = _await$ApiService$get.data;\n            setDiaristas(data.diaristas);\n            setDiaristasRestantes(data.quantidade_diaristas);\n            setBuscaFeita(true);\n            setCarregando(false);\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](3);\n            setErro(\"CEP não encontrado.\");\n            setCarregando(false);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 14]], Promise);\n  }\n\n  return {\n    CEP: CEP,\n    setCEP: setCEP,\n    cepValido: cepValido,\n    buscarProfissionais: buscarProfissionais,\n    erro: erro,\n    diaristas: diaristas,\n    buscaFeita: buscaFeita,\n    carregando: carregando,\n    diaristasRestantes: diaristasRestantes\n  };\n}","map":{"version":3,"sources":["/home/samsepi0l/GitHub/TreinaWeb/e-diaristas-mobile/src/data/hooks/pages/useIndex.page.ts"],"names":["useState","useMemo","ValidationService","ApiService","useIndex","CEP","setCEP","cepValido","cep","erro","setErro","buscaFeita","setBuscaFeita","carregando","setCarregando","diaristas","setDiaristas","diaristasRestantes","setDiaristasRestantes","buscarProfissionais","get","replace","data","quantidade_diaristas"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AAEA,SAASC,iBAAT;AACA,SAASC,UAAT;AAEA,eAAe,SAASC,QAAT,GAAoB;AAClC,kBAAsBJ,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOK,GAAP;AAAA,MAAYC,MAAZ;AAAA,MACCC,SADD,GACaN,OAAO,CAAC,YAAM;AACzB,WAAOC,iBAAiB,CAACM,GAAlB,CAAsBH,GAAtB,CAAP;AACA,GAFkB,EAEhB,CAACA,GAAD,CAFgB,CADpB;AAAA,mBAImBL,QAAQ,CAAC,EAAD,CAJ3B;AAAA;AAAA,MAIES,IAJF;AAAA,MAIQC,OAJR;AAAA,mBAK+BV,QAAQ,CAAC,KAAD,CALvC;AAAA;AAAA,MAKEW,UALF;AAAA,MAKcC,aALd;AAAA,mBAM+BZ,QAAQ,CAAC,KAAD,CANvC;AAAA;AAAA,MAMEa,UANF;AAAA,MAMcC,aANd;AAAA,mBAO6Bd,QAAQ,CAAC,EAAD,CAPrC;AAAA;AAAA,MAOEe,SAPF;AAAA,MAOaC,YAPb;AAAA,oBAQ+ChB,QAAQ,CAAC,CAAD,CARvD;AAAA;AAAA,MAQEiB,kBARF;AAAA,MAQsBC,qBARtB;;AAUA,WAAeC,mBAAf,CAAmCX,GAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCI,YAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,YAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,YAAAA,OAAO,CAAC,EAAD,CAAP;AAHD;AAAA;AAAA,6CAMyBP,UAAU,CAACiB,GAAX,CAGpB,+BAA+Bf,GAAG,CAACgB,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAHX,CANzB;;AAAA;AAAA;AAMUC,YAAAA,IANV,yBAMUA,IANV;AAUEN,YAAAA,YAAY,CAACM,IAAI,CAACP,SAAN,CAAZ;AACAG,YAAAA,qBAAqB,CAACI,IAAI,CAACC,oBAAN,CAArB;AACAX,YAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,YAAAA,aAAa,CAAC,KAAD,CAAb;AAbF;AAAA;;AAAA;AAAA;AAAA;AAeEJ,YAAAA,OAAO,CAAC,qBAAD,CAAP;AACAI,YAAAA,aAAa,CAAC,KAAD,CAAb;;AAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAAO;AACNT,IAAAA,GAAG,EAAHA,GADM;AAENC,IAAAA,MAAM,EAANA,MAFM;AAGNC,IAAAA,SAAS,EAATA,SAHM;AAINY,IAAAA,mBAAmB,EAAnBA,mBAJM;AAKNV,IAAAA,IAAI,EAAJA,IALM;AAMNM,IAAAA,SAAS,EAATA,SANM;AAONJ,IAAAA,UAAU,EAAVA,UAPM;AAQNE,IAAAA,UAAU,EAAVA,UARM;AASNI,IAAAA,kBAAkB,EAAlBA;AATM,GAAP;AAWA","sourcesContent":["import { useState, useMemo } from \"react\";\nimport { UserShortInterface } from \"data/@types/UserInterface\";\nimport { ValidationService } from \"data/services/ValidationService\";\nimport { ApiService } from \"data/services/ApiServices\";\n\nexport default function useIndex() {\n\tconst [CEP, setCEP] = useState(\"\"),\n\t\tcepValido = useMemo(() => {\n\t\t\treturn ValidationService.cep(CEP);\n\t\t}, [CEP]),\n\t\t[erro, setErro] = useState(\"\"),\n\t\t[buscaFeita, setBuscaFeita] = useState(false),\n\t\t[carregando, setCarregando] = useState(false),\n\t\t[diaristas, setDiaristas] = useState([] as UserShortInterface[]),\n\t\t[diaristasRestantes, setDiaristasRestantes] = useState(0);\n\n\tasync function buscarProfissionais(cep: string) {\n\t\tsetBuscaFeita(false);\n\t\tsetCarregando(true);\n\t\tsetErro(\"\");\n\n\t\ttry {\n\t\t\tconst { data } = await ApiService.get<{\n\t\t\t\tdiaristas: UserShortInterface[];\n\t\t\t\tquantidade_diaristas: number;\n\t\t\t}>(\"/api/diaristas-cidade?cep=\" + CEP.replace(/\\D/g, \"\"));\n\t\t\tsetDiaristas(data.diaristas);\n\t\t\tsetDiaristasRestantes(data.quantidade_diaristas);\n\t\t\tsetBuscaFeita(true);\n\t\t\tsetCarregando(false);\n\t\t} catch (error) {\n\t\t\tsetErro(\"CEP não encontrado.\");\n\t\t\tsetCarregando(false);\n\t\t}\n\t}\n\treturn {\n\t\tCEP,\n\t\tsetCEP,\n\t\tcepValido,\n\t\tbuscarProfissionais,\n\t\terro,\n\t\tdiaristas,\n\t\tbuscaFeita,\n\t\tcarregando,\n\t\tdiaristasRestantes,\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}